name: Build and Deploy Next.js to O2Switch

on:
  push:
    branches: [ develop, main ]

jobs:
  build-deploy:
    runs-on: ubuntu-latest
    steps:
      # 1. Cloner le dépôt
      - uses: actions/checkout@v4

      # 2. Installer Node.js
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 22

      # 3. Installer les dépendances
      - name: Install dependencies
        run: npm install

      # 4. Build et export statique du projet Next.js
      - name: Build and start Next.js
        run: |
          npm run build
          npm run start

      # 5. Obtenir l'adresse IP publique du runner
      - name: Get public IP
        id: ip
        uses: haythem/public-ip@v1.3

      # 6. Ajouter l'IP à la liste blanche d’O2Switch
      - name: Whitelist IP on O2Switch
        shell: bash
        run: |
          ENDPOINT='frontend/o2switch/o2switch-ssh-whitelist/index.live.php'
          curl -X POST -d "whitelist[address]=${{ steps.ip.outputs.ipv4 }}" -d 'whitelist[port]=22' \
          "https://${{ secrets.REMOTE_USER }}:${{ secrets.URL_ENCODED_PASSWORD }}@${{ secrets.REMOTE_HOST }}:2083/$ENDPOINT?r=add"

      # 7. Déployer sur le serveur selon la branche
      - name: Deploy to server
        shell: bash
        run: |
          # Définir la cible en fonction de la branche
          if [ "${{ github.ref }}" == "refs/heads/develop" ]; then
            TARGET=${{ secrets.REMOTE_PREPROD_TARGET }}
          else
            TARGET=${{ secrets.REMOTE_PROD_TARGET }}
          fi

          # Transférer les fichiers statiques vers le serveur via rsync
          rsync -az --delete --exclude=node_modules --exclude=.git ./out/ ${{ secrets.REMOTE_USER }}@${{ secrets.REMOTE_HOST }}:$TARGET
